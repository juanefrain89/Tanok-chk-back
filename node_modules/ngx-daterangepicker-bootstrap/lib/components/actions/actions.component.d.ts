import { OutputEmitterRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare class ActionsComponent {
    readonly rangesArray: import("@angular/core").InputSignal<any[]>;
    readonly autoApply: import("@angular/core").InputSignal<any>;
    readonly showCalInRanges: import("@angular/core").InputSignal<any>;
    readonly singleDatePicker: import("@angular/core").InputSignal<any>;
    readonly chosenLabel: import("@angular/core").InputSignal<any>;
    readonly applyBtnDisabled: import("@angular/core").InputSignal<any>;
    readonly locale: import("@angular/core").InputSignal<any>;
    readonly showCancel: import("@angular/core").InputSignal<any>;
    readonly showClearButton: import("@angular/core").InputSignal<any>;
    readonly applyEvent: OutputEmitterRef<MouseEvent>;
    readonly cancelEvent: OutputEmitterRef<MouseEvent>;
    readonly clearEvent: OutputEmitterRef<MouseEvent>;
    clickApply($event: any): void;
    clickCancel($event: any): void;
    clickClear($event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ActionsComponent, "actions", never, { "rangesArray": { "alias": "rangesArray"; "required": false; "isSignal": true; }; "autoApply": { "alias": "autoApply"; "required": false; "isSignal": true; }; "showCalInRanges": { "alias": "showCalInRanges"; "required": false; "isSignal": true; }; "singleDatePicker": { "alias": "singleDatePicker"; "required": false; "isSignal": true; }; "chosenLabel": { "alias": "chosenLabel"; "required": false; "isSignal": true; }; "applyBtnDisabled": { "alias": "applyBtnDisabled"; "required": false; "isSignal": true; }; "locale": { "alias": "locale"; "required": false; "isSignal": true; }; "showCancel": { "alias": "showCancel"; "required": false; "isSignal": true; }; "showClearButton": { "alias": "showClearButton"; "required": false; "isSignal": true; }; }, { "applyEvent": "applyEvent"; "cancelEvent": "cancelEvent"; "clearEvent": "clearEvent"; }, never, never, true, never>;
}
